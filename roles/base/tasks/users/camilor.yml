- name: "users | {{ user.name }} | create group"
  tags: "groups, {{ user.name }},users"
  group:
    name: "{{ user.group }}"
    state: present

- name: "users | {{ user.name }} | create user"
  tags: "{{ user.name }},sudo,users"
  user:
    name: "{{ user.name }}"
    group: "{{ user.group }}"
    groups: "adm,wheel,{{ sudo_group }}"
    state: present
    comment: "{{ user.comment }}"
    shell: /bin/zsh
#    password: "{{ camilor_passwd }}"

- name: "users | {{ user.name }} | set login shell of user {{ user.name }} to `/bin/zsh` with `usermod`"
  ansible.builtin.command: "usermod --shell /bin/zsh {{ user.name }}"
  become: true
  changed_when: false

- name: "users | {{ user.name }} | add sudoers file"
  tags: "{{ user.name }},settings,sudo,system,users"
  copy:
    src: users/sudoers_camilor
    dest: "/etc/sudoers.d/{{ user.name }}"
    owner: root
    group: root
    mode: 0440
    validate: 'visudo -cf %s'

- name: "users | {{ user.name }} | create .ssh directory"
  tags: "dotfiles,{{ user.name }},ssh,users"
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
  with_items:
    - { dir: '/home/{{ user.name }}/.ssh' }

- name: "users | {{ user.name }} | add public key"
  tags: "dotfiles,{{ user.name }},ssh,ssh-keys,users"
  authorized_key:
    user: "{{ user.name }}"
    key: "{{ item }}"
  with_file:
    - users/camilor/ssh/camilor_id_ed25519.pub

- name: "users | {{ user.name }} | add pub key to .ssh"
  tags: "{{ user.name }},keys,ssh"
  copy:
    src: users/camilor/ssh/camilor_id_ed25519.pub
    dest: "/home/{{ user.name }}/.ssh/id_ed25519.pub"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0600

- name: "users | {{ user.name }} | create config directories"
  tags: "dotfiles,{{ user.name }},tmux,users,vim,zsh"
  file:
    path: "/home/{{ user.name }}/{{ item.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
  with_items:
    - { dir: '.bash' }
    - { dir: '.config' }
    - { dir: '.config/htop' }
    - { dir: '.config/mc' }
    - { dir: '.tmux' }
    - { dir: '.tmux/config' }
    - { dir: '.tmux/plugins' }
    - { dir: '.vim' }
    - { dir: '.vim/autoload' }
    - { dir: '.vim/bundle' }
    - { dir: '.vim/colors' }
    - { dir: '.vim/ftplugin' }
    - { dir: '.zsh' }
    - { dir: '.oh-my-zsh' }

- name: "users | {{ user.name }} | Download oh my zsh"
  git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "/home/{{ user.name }}/.oh-my-zsh"
    depth: 1
  become: yes
  become_user: "{{ user.name }}"

- name: "users | {{ user.name }} | create powerlevel10k theme"
  tags: "dotfiles,{{ user.name }},tmux,users,vim,zsh"
  file:
    path: "/home/{{ user.name }}/{{ item.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
  with_items:
    - { dir: '.oh-my-zsh/themes/powerlevel10k' }

- name: "users | {{ user.name }} | Download pk10k"
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "/home/{{ user.name }}/.oh-my-zsh/themes/powerlevel10k"
    depth: 1
  become: yes
  become_user: "{{ user.name }}"

- name: "users | {{ user.name }} | create zsh-syntax-highlighting oh-my-zsh plugin"
  tags: "dotfiles,{{ user.name }},users,zsh"
  file:
    path: "/home/{{ user.name }}/{{ item.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
  with_items:
    - { dir: '.oh-my-zsh/plugins/zsh-syntax-highlighting' }

- name: "users | {{ user.name }} | Download autosuggestions plugin"
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "/home/{{ user.name }}/.oh-my-zsh/plugins/zsh-syntax-highlighting"
    depth: 1
  become: yes
  become_user: "{{ user.name }}"

- name: "users | {{ user.name }} | create autosuggestions oh-my-zsh plugin"
  tags: "dotfiles,{{ user.name }},users,zsh"
  file:
    path: "/home/{{ user.name }}/{{ item.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
  with_items:
    - { dir: '.oh-my-zsh/plugins/zsh-autosugguestions' }

- name: "users | {{ user.name }} | Download autosuggestions plugin"
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "/home/{{ user.name }}/.oh-my-zsh/plugins/zsh-autosuggestions"
    depth: 1
  become: yes
  become_user: "{{ user.name }}"

- name: "users | {{ user.name }} | copy zsh aliases files"
  tags: "dotfiles,{{ user.name }},users,zsh"
  copy:
    src: users/camilor/zsh/aliases.zsh
    dest: "/home/{{ user.name }}/.oh-my-zsh/custom/aliases.zsh"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0600

- name: "users | {{ user.name }} | copy tmux config (server version)"
  tags: "dotfiles,users,{{ user.name }},tmux,users,vim,zsh"
  copy:
    src: users/camilor/tmux/tmux.conf.server
    dest: "/home/{{ user.name }}/.tmux.conf"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0600
  when: "'server' not in group_names"

- name: "users | {{ user.name }} | copy tmux config (workstation version)"
  tags: "dotfiles,users,{{ user.name }},tmux,users,vim,zsh"
  copy:
    src: users/camilor/tmux/tmux.conf.workstation
    dest: "/home/{{ user.name }}/.tmux.conf"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0600
  when: "'server' in group_names"

- name: "users | {{ user.name }} | copy dotfiles"
  tags: "dotfiles,users,{{ user.name }},tmux,users,vim,zsh"
  copy:
    src: users/camilor/{{ item.src }}
    dest: "/home/{{ user.name }}/{{ item.dest }}"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0600
  with_items:
    - { src: 'bash/bash_aliases', dest: '.bash/bash_aliases' }
    - { src: 'bash/bash_profile', dest: '.bash_profile' }
    - { src: 'bash/bash_prompt', dest: '.bash/bash_prompt' }
    - { src: 'bash/bash_functions', dest: '.bash/bash_functions' }
    - { src: 'bash/bashrc', dest: '.bashrc' }
    - { src: 'bash/profile', dest: '.profile' }
    - { src: 'git/gitconfig', dest: '.gitconfig' }
    - { src: 'htop/htoprc', dest: '.config/htop/htoprc' }
    - { src: 'inputrc', dest: '.inputrc' }
    - { src: 'mc/mc.ini', dest: '.config/mc/ini' }
    - { src: 'zsh/zshrc', dest: '.zshrc' }
    - { src: 'zsh/p10k.zsh', dest: '.p10k.zsh' }

- name: "users | {{ user.name }} | clone tmux-completion plugin repository"
  tags: "dotfiles,{{ user.name }},users,tmux"
  git:
    repo: https://github.com/srsudar/tmux-completion.git
    dest: "/home/{{ user.name }}/.tmux/plugins/completion"
    force: yes
  notify: update_tmux_plugin_perms

- name: "users | {{ user.name }} | clone tmux-continuum plugin repository"
  tags: "dotfiles,{{ user.name }},users,tmux"
  git:
    repo: https://github.com/tmux-plugins/tmux-continuum
    dest: "/home/{{ user.name }}/.tmux/plugins/continuum"
    force: yes
  notify: update_tmux_plugin_perms

- name: "users | {{ user.name }} | clone tmux-resurrect plugin repository"
  tags: "dotfiles,{{ user.name }},users,tmux"
  git:
    repo: https://github.com/tmux-plugins/tmux-resurrect
    dest: "/home/{{ user.name }}/.tmux/plugins/resurrect"
    force: yes
  notify: update_tmux_plugin_perms

- name: "users | {{ user.name }} | copy individual zsh config files"
  tags: "dotfiles,{{ user.name }},users,zsh"
  copy:
    src: users/camilor/zsh/{{ item.src }}
    dest: "/home/{{ user.name }}/.zsh/{{ item.src }}"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0600
  with_items:
    - { src: 'aliases.zsh' }
    - { src: 'bindkey.zsh' }
    - { src: 'completion.zsh' }
    - { src: 'exports.zsh' }
    - { src: 'functions.zsh' }
    - { src: 'history.zsh' }
    - { src: 'path.zsh' }
    - { src: 'plugins.zsh' }
    - { src: 'prompt.zsh' }
    - { src: 'setopt.zsh' }
    - { src: 'theming.zsh' }
